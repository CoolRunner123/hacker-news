{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\jkath\\\\Documents\\\\GitHub\\\\hacker-news\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\jkath\\\\Documents\\\\GitHub\\\\hacker-news\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\jkath\\\\Documents\\\\GitHub\\\\hacker-news\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\jkath\\\\Documents\\\\GitHub\\\\hacker-news\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\jkath\\\\Documents\\\\GitHub\\\\hacker-news\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\jkath\\\\Documents\\\\GitHub\\\\hacker-news\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\jkath\\\\Documents\\\\GitHub\\\\hacker-news\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\jkath\\\\Documents\\\\GitHub\\\\hacker-news\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\jkath\\\\Documents\\\\GitHub\\\\hacker-news\\\\src\\\\components\\\\layouts\\\\CommentForm.js\";\nimport React, { Component } from \"react\";\n\nvar CommentForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentForm, _Component);\n\n  function CommentForm(props) {\n    var _this;\n\n    _classCallCheck(this, CommentForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommentForm).call(this, props));\n\n    _this.handleFieldChange = function (event) {\n      var _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n\n      _this.setState(_objectSpread({}, _this.state, {\n        comment: _objectSpread({}, _this.state.comment, _defineProperty({}, name, value))\n      }));\n    };\n\n    _this.state = {\n      loading: false,\n      error: \"\",\n      comment: {\n        name: \"\",\n        message: \"\"\n      }\n    }; // bind context to methods\n\n    _this.handleFieldChange = _this.handleFieldChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  /**\r\n   * Handle form input field changes & update the state\r\n   */\n\n\n  _createClass(CommentForm, [{\n    key: \"onSubmit\",\n\n    /**\r\n     * Form submit handler\r\n     */\n    value: function onSubmit(e) {\n      var _this2 = this;\n\n      // prevent default form submission\n      e.preventDefault();\n\n      if (!this.isFormValid()) {\n        this.setState({\n          error: \"All fields are required.\"\n        });\n        return;\n      } // loading status and clear error\n\n\n      this.setState({\n        error: \"\",\n        loading: true\n      }); // persist the comments on server\n\n      var comment = this.state.comment;\n      fetch(\"http://localhost:7777\", {\n        method: \"post\",\n        body: JSON.stringify(comment)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        if (res.error) {\n          _this2.setState({\n            loading: false,\n            error: res.error\n          });\n        } else {\n          // add time return from api and push comment to parent state\n          comment.time = res.time;\n\n          _this2.props.addComment(comment); // clear the message box\n\n\n          _this2.setState({\n            loading: false,\n            comment: _objectSpread({}, comment, {\n              message: \"\"\n            })\n          });\n        }\n      }).catch(function (err) {\n        _this2.setState({\n          error: \"Something went wrong while submitting form.\",\n          loading: false\n        });\n      });\n    }\n    /**\r\n     * Simple validation\r\n     */\n\n  }, {\n    key: \"isFormValid\",\n    value: function isFormValid() {\n      return this.state.comment.name !== \"\" && this.state.comment.message !== \"\";\n    }\n  }, {\n    key: \"renderError\",\n    value: function renderError() {\n      return this.state.error ? React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.state.error) : null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        method: \"post\",\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.handleFieldChange,\n        value: this.state.comment.name,\n        className: \"form-control\",\n        placeholder: \"Your Name\",\n        name: \"name\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        onChange: this.handleFieldChange,\n        value: this.state.comment.message,\n        className: \"form-control\",\n        placeholder: \" Your Comment\",\n        name: \"message\",\n        rows: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: console.log(this.state.comment.name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Comment \\u27A4\")));\n    }\n  }]);\n\n  return CommentForm;\n}(Component);\n\nexport { CommentForm as default };","map":{"version":3,"sources":["C:\\Users\\jkath\\Documents\\GitHub\\hacker-news\\src\\components\\layouts\\CommentForm.js"],"names":["React","Component","CommentForm","props","handleFieldChange","event","target","value","name","setState","state","comment","loading","error","message","bind","onSubmit","e","preventDefault","isFormValid","fetch","method","body","JSON","stringify","then","res","json","time","addComment","catch","err","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\n\r\nexport default class CommentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      error: \"\",\r\n\r\n      comment: {\r\n        name: \"\",\r\n        message: \"\"\r\n      }\r\n    };\r\n\r\n    // bind context to methods\r\n    this.handleFieldChange = this.handleFieldChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Handle form input field changes & update the state\r\n   */\r\n  handleFieldChange = event => {\r\n    const { value, name } = event.target;\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      comment: {\r\n        ...this.state.comment,\r\n        [name]: value\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Form submit handler\r\n   */\r\n  onSubmit(e) {\r\n    // prevent default form submission\r\n    e.preventDefault();\r\n\r\n    if (!this.isFormValid()) {\r\n      this.setState({ error: \"All fields are required.\" });\r\n      return;\r\n    }\r\n\r\n    // loading status and clear error\r\n    this.setState({ error: \"\", loading: true });\r\n\r\n    // persist the comments on server\r\n    let { comment } = this.state;\r\n    fetch(\"http://localhost:7777\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(comment)\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (res.error) {\r\n          this.setState({ loading: false, error: res.error });\r\n        } else {\r\n          // add time return from api and push comment to parent state\r\n          comment.time = res.time;\r\n          this.props.addComment(comment);\r\n\r\n          // clear the message box\r\n          this.setState({\r\n            loading: false,\r\n            comment: { ...comment, message: \"\" }\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          error: \"Something went wrong while submitting form.\",\r\n          loading: false\r\n        });\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Simple validation\r\n   */\r\n  isFormValid() {\r\n    return this.state.comment.name !== \"\" && this.state.comment.message !== \"\";\r\n  }\r\n\r\n  renderError() {\r\n    return this.state.error ? (\r\n      <div className=\"alert alert-danger\">{this.state.error}</div>\r\n    ) : null;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n   \r\n        <form method=\"post\" onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <input\r\n              onChange={this.handleFieldChange}\r\n              value={this.state.comment.name}\r\n              className=\"form-control\"\r\n              placeholder=\"Your Name\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              onChange={this.handleFieldChange}\r\n              value={this.state.comment.message}\r\n              className=\"form-control\"\r\n              placeholder=\" Your Comment\"\r\n              name=\"message\"\r\n              rows=\"5\"\r\n            />\r\n          </div>\r\n    \r\n\r\n          <div className=\"form-group\">\r\n            <button className=\"btn btn-primary\" onClick={console.log(this.state.comment.name)}>\r\n              Comment &#10148;\r\n            </button>\r\n          </div>\r\n        </form>\r\n        \r\n       \r\n    \r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}