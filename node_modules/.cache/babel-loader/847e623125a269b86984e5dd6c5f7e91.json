{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jkath\\\\Documents\\\\GitHub\\\\hacker-news\\\\src\\\\components\\\\layouts\\\\Submit.js\";\nimport React from \"react\";\nimport { Button } from \"react-bootstrap\";\nvar commentData = [{\n  author: \"Shawn Spencer\",\n  text: \"I've heard it both ways\"\n}, {\n  author: \"Burton Guster\",\n  text: \"You hear about Pluto? That's messed up\"\n}];\nvar CommentBox = React.createClass({\n  displayName: \"CommentBox\",\n  getInitialState: function getInitialState() {\n    return {\n      data: commentData\n    };\n  },\n  handleCommentSubmit: function handleCommentSubmit(comment) {\n    this.props.data.push(comment);\n    var comments = this.state.data;\n    var newComments = comments.concat([comment]);\n    this.setState({\n      data: newComments\n    });\n  },\n  render: function render() {\n    return React.createElement(\"div\", {\n      className: \"comment-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(CommentForm, {\n      data: this.props.data,\n      onCommentSubmit: this.handleCommentSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(CommentList, {\n      data: this.props.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));\n  }\n});\nvar CommentList = React.createClass({\n  displayName: \"CommentList\",\n  render: function render() {\n    return React.createElement(\"div\", {\n      className: \"comment-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.props.data.map(function (c) {\n      return React.createElement(Comment, {\n        author: c.author,\n        text: c.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      });\n    }));\n  }\n});\nvar CommentForm = React.createClass({\n  displayName: \"CommentForm\",\n  handleSubmit: function handleSubmit(e) {\n    e.preventDefault();\n    var authorVal = e.target[0].value.trim();\n    var textVal = e.target[1].value.trim();\n\n    if (!textVal || !authorVal) {\n      return;\n    }\n\n    this.props.onCommentSubmit({\n      author: authorVal,\n      text: textVal\n    });\n    e.target[0].value = '';\n    e.target[1].value = '';\n    return;\n  },\n  render: function render() {\n    return React.createElement(\"form\", {\n      className: \"comment-form form-group\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-addon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Your name\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-addon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Comment\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Say something...\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Post\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }\n});\nvar Comment = React.createClass({\n  displayName: \"Comment\",\n  render: function render() {\n    return React.createElement(\"div\", {\n      className: \"comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.props.author), this.props.text);\n  }\n});\nReact.render(React.createElement(CommentBox, {\n  data: commentData,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87\n  },\n  __self: this\n}), document.getElementById('app'));\n\nvar Submit = function Submit() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"title:\", React.createElement(\"input\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), \"url: \", React.createElement(\"input\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), \"or\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), \"text:\", React.createElement(\"input\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"submit\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), \"Leave url blank to submit a question for discussion. If there is no url, the text (if any) will appear at the top of the thread. You can also submit via bookmarklet.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }));\n};\n\nexport default Submit;","map":{"version":3,"sources":["C:\\Users\\jkath\\Documents\\GitHub\\hacker-news\\src\\components\\layouts\\Submit.js"],"names":["React","Button","commentData","author","text","CommentBox","createClass","getInitialState","data","handleCommentSubmit","comment","props","push","comments","state","newComments","concat","setState","render","CommentList","map","c","CommentForm","handleSubmit","e","preventDefault","authorVal","target","value","trim","textVal","onCommentSubmit","Comment","document","getElementById","Submit"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nvar commentData = [\r\n  { \r\n    author:\"Shawn Spencer\", \r\n    text:\"I've heard it both ways\"\r\n  },\r\n  { \r\n    author:\"Burton Guster\", \r\n    text:\"You hear about Pluto? That's messed up\" \r\n  }\r\n];\r\nvar CommentBox = React.createClass({\r\n  getInitialState: function() {\r\n    return {\r\n      data: commentData\r\n    }\r\n  },\r\n  handleCommentSubmit: function(comment) {\r\n    this.props.data.push(comment);\r\n    var comments = this.state.data;\r\n    var newComments = comments.concat([comment]);\r\n    this.setState({data: newComments});\r\n  },\r\n  render: function() {\r\n    return (\r\n      <div className=\"comment-box\">\r\n        <CommentForm data={this.props.data} onCommentSubmit={this.handleCommentSubmit} />\r\n        <CommentList data={this.props.data} />\r\n      </div>\r\n    );\r\n  }\r\n});\r\nvar CommentList = React.createClass({\r\n  render: function() {\r\n    return (\r\n      <div className=\"comment-list\">\r\n        {this.props.data.map(function(c){\r\n          return (\r\n            <Comment author={c.author} text={c.text} />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n});\r\nvar CommentForm = React.createClass({\r\n  handleSubmit: function(e) {\r\n    e.preventDefault();\r\n    var authorVal = e.target[0].value.trim();\r\n    var textVal = e.target[1].value.trim();\r\n    if (!textVal || !authorVal) {\r\n      return;\r\n    }\r\n    this.props.onCommentSubmit({author: authorVal, text: textVal});\r\n    e.target[0].value = '';\r\n    e.target[1].value = '';\r\n    return;\r\n  },\r\n  render: function() {\r\n    return(\r\n      <form className=\"comment-form form-group\" onSubmit={this.handleSubmit}>\r\n        <div className=\"input-group\">\r\n          <span className=\"input-group-addon\">Name</span>\r\n          <input type=\"text\" placeholder=\"Your name\" className=\"form-control\" />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <span className=\"input-group-addon\">Comment</span>\r\n          <input type=\"text\" placeholder=\"Say something...\" className=\"form-control\" />\r\n        </div>\r\n        <input type=\"submit\" value=\"Post\" className=\"btn btn-primary\" />\r\n      </form>\r\n    );\r\n  }\r\n});\r\nvar Comment = React.createClass({\r\n  render: function() {\r\n    return (\r\n      <div className=\"comment\">\r\n        <h2 className=\"author\">{this.props.author}</h2>\r\n        {this.props.text}\r\n      </div>\r\n    );\r\n  }\r\n});\r\nReact.render(\r\n  <CommentBox data={commentData} />,\r\n  document.getElementById('app')\r\n);\r\nconst Submit = () => {\r\n  return (\r\n    <div >\r\n    title:\r\n   <input></input> <br></br>\r\n    <br></br>\r\n    url: <input></input> <br></br>\r\n    <br></br>\r\n  \r\n   \r\n        or\r\n    <br></br>\r\n    <br></br>\r\n   \r\n    text:<input></input><br></br>\r\n    <br></br>\r\n  \r\n    <br></br>\r\n    <br></br>\r\n    <Button>submit</Button>\r\n    <br></br>\r\n    <br></br>\r\nLeave url blank to submit a question for discussion. If there is no url, the text (if any) will appear at the top of the thread.\r\n\r\nYou can also submit via bookmarklet.\r\n    <br></br>\r\n    <br></br>\r\n    <br></br>\r\n    <br></br>\r\n    <br></br>\r\n\r\n\r\n       \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Submit;\r\n"]},"metadata":{},"sourceType":"module"}